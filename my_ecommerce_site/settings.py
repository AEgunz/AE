"""
Django settings for my_ecommerce_site project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-#6d2=l(im5w4q8m(d#uh5)*#y2723i!^zb$yi5yb5#umw*e=fq'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['91.108.102.225', 'localhost', '127.0.0.1']

CSRF_TRUSTED_ORIGINS = [
    'http://91.108.102.225:8000', # Assuming your server runs on port 8000
    'http://localhost:8000',
    'http://127.0.0.1:8000',
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'store',

    # django-allauth
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google', # For Google OAuth

    'django.contrib.sites', # Required by allauth
]

SITE_ID = 1 # Required by allauth

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware', # Add AccountMiddleware
]

ROOT_URLCONF = 'my_ecommerce_site.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'store.context_processors.cart',
                'store.context_processors.categories_processor', # Added categories context processor
            ],
        },
    },
]

WSGI_APPLICATION = 'my_ecommerce_site.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR / "static"]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Email settings for development (print to console)
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
DEFAULT_FROM_EMAIL = 'ayoub.drf@gmail.com'
ADMIN_EMAIL = 'ayoub.drf@gmail.com'  # Admin email to receive notifications
ADMIN_WHATSAPP = '+212648344089'  # Admin WhatsApp number for notifications

# Cart settings
CART_SESSION_ID = 'cart'

# Login/Logout Redirect URLs
LOGIN_REDIRECT_URL = 'store:home'  # Redirect to home page after login
LOGOUT_REDIRECT_URL = 'store:home' # Redirect to home page after logout

# django-allauth specific settings
AUTHENTICATION_BACKENDS = [
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
]

# Show logout confirmation page
ACCOUNT_LOGOUT_ON_GET = False

# ACCOUNT_EMAIL_REQUIRED = True # Deprecated
ACCOUNT_EMAIL_VERIFICATION = 'none' # Can be 'mandatory' or 'none'
ACCOUNT_LOGIN_METHODS = ['username', 'email'] # Allow login with username or email
# ACCOUNT_USERNAME_REQUIRED = True # Deprecated
# ACCOUNT_EMAIL_REQUIRED = True # Deprecated
ACCOUNT_SIGNUP_FIELDS = ['username', 'email'] # Explicitly define signup fields
# Password fields are implicitly handled by allauth's UserCreationForm equivalent
# ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE defaults to True

# Social account provider settings (Google)
# Client ID and Secret will be added via Django Admin later
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        },
        'OAUTH_PKCE_ENABLED': True,
    }
}
